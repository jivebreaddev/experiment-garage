buildscript {
    ext {
        springBootVersion = '3.3.4'
        springCloudVersion = "2023.0.3"
        springConfigVersion = '4.1.3'
        dependencyManagement = '1.1.6'
        jibContainerVersion = '3.4.4'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagement}"
    id 'com.google.cloud.tools.jib' version "${jibContainerVersion}" apply false
    id 'jacoco'

}

allprojects {
    group = 'com.yourcompany'
    version = '1.0-SNAPSHOT'


    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'groovy'
    apply plugin: 'jacoco'

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter"
        implementation "org.springframework.cloud:spring-cloud-starter-config"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
        implementation("io.micrometer:micrometer-tracing-bridge-brave")
        implementation("io.micrometer:micrometer-registry-prometheus")

    }
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    test {
        useJUnitPlatform()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }
    // Make these values available to all subprojects
    ext {
        springBootVersion = rootProject.ext.springBootVersion
        springCloudVersion = rootProject.ext.springCloudVersion
        jibContainerVersion = rootProject.ext.jibContainerVersion
    }

    bootJar.enabled = false
    jar.enabled = true
}

group = "com.teamsimon"
version = "0.0.1-SNAPSHOT"

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

project(':') { // Root project configuration
    tasks.named('bootJar') {
        enabled = false
    }

    task buildAll {
        dependsOn subprojects*.build
        doLast {
            println 'Building all subprojects from the root project'
        }
    }

    build {
        dependsOn buildAll
    }


}

task dockerDownAll(type: Exec) {
    commandLine 'docker-compose', 'down'
}

task dockerRunAll(type: Exec) {
    dependsOn dockerDownAll
    dependsOn subprojects.findAll { subproject ->
        subproject.tasks.findByName('jibDockerBuild') != null
    }*.jibDockerBuild
    commandLine 'docker-compose', 'up', '-d'
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs("-XX:+EnableDynamicAgentLoading")
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    reports {
        html.required = true
        xml.required = false
        csv.required = false
    }

    finalizedBy jacocoTestCoverageVerification
}


