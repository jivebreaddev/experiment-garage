version: '2.1'
services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  config-server:
    image: jivebreaddev/license-config:latest
    restart: on-failure
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "configserver"
  licensing-service:
    image: jivebreaddev/license:latest
    restart: on-failure
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://config-server:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - backend
  organization:
    image: jivebreaddev/organization:latest
    restart: on-failure
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://config-server:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - backend

  eureka-server:
    image: jivebreaddev/eureka:latest
    restart: on-failure
    ports:
      - "8070:8070"
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"
  gateway-server:
    image: jivebreaddev/spring-gateway
    ports:
      - "8072:8072"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8072"
      CONFIGSERVER_URI: "http://config-server:8071"
      EUREKASERVER_URI: "http://eureka-server:8070/eureka/"
      EUREKASERVER_PORT: "8070"
      CONFIGSERVER_PORT: "8071"
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    depends_on:
      - elasticsearch
    environment:
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=elasticsearch:9300"
    ports:
      - "9411:9411"
    networks:
      backend:
        aliases:
          - "zipkin"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false       # Disable security (authentication)
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      backend:
        aliases:
          - "elasticsearch"
volumes:
  esdata1:
    driver: local
networks:
  backend:
    driver: bridge
